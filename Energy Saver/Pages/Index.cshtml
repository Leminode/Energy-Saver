@page
@using System.ComponentModel
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using System.Reflection
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4 text-color">Energy Saver</h1>
</div>
<div class="main-div">
    @if(User.Identity.IsAuthenticated){
        <table class="table" id="tax-list">
            <thead>
                <tr>
                    <th style="text-align:left">Month</th>
                    <th style="text-align:right">Gas amount</th>
                    <th style="text-align:right">Electricity amount</th>
                    <th style="text-align:right">Water amount</th>
                    <th style="text-align:right">Heating amount</th>
                    <th style="text-align:right"> </th>
                </tr>
            </thead>
            @foreach (var year in Model.Taxes)
            {
                <tr>
                    <td colspan=6 style="text-align:left"><b>@year[0].Year</b></td>
                </tr>

                @foreach (var taxRecord in year)
                {
                    <tr>
                        <td>
                            @{var withStyle = Model.GetComparison(taxRecord.Month, taxRecord.Year);}
                            <div class="row">
                                <div style="text-align:left; font-weight: bold" class="col-2">
                                    @taxRecord.Month.ToString()
                                </div>
                                <div style="text-align:right; vertical-align:middle" class="col">
                                    @{
                                        string colorStyle = withStyle.Percentage < 0 ? "text-positive" : withStyle.Percentage == 0 ? "text-neutral" : "text-negative";
                                        string arrowStyle = withStyle.Percentage < 0 ? "bi-arrow-down" : withStyle.Percentage == 0 ? "bi-arrow-down-up" : "bi-arrow-up";
                                        string value = withStyle.Percentage > 0 ? "+" + withStyle.Percentage.ToString() : withStyle.Percentage.ToString();
                                    }
                                    <div class="@colorStyle"><i class="@arrowStyle"></i> @value%</div>
                                </div>
                            </div>
                        </td>
                        <td style="text-align:right">
                            @(taxRecord.GasAmount % 1 == 0 ? (int)taxRecord.GasAmount : taxRecord.GasAmount)
                        </td>
                        <td style="text-align:right">
                            @(taxRecord.ElectricityAmount % 1 == 0 ? (int)taxRecord.ElectricityAmount : taxRecord.ElectricityAmount)
                        </td>
                        <td style="text-align:right">
                            @(taxRecord.WaterAmount % 1 == 0 ? (int)taxRecord.WaterAmount : taxRecord.WaterAmount)
                        </td>
                        <td style="text-align:right">
                            @(taxRecord.HeatingAmount % 1 == 0 ? (int)taxRecord.HeatingAmount : taxRecord.HeatingAmount)
                        </td>
                        <td style="text-align:right">
                            <a class="text-color" asp-page="./Edit" asp-route-id="@taxRecord.ID">Edit</a> |
                            <a class="text-color" asp-page="./Details" asp-route-id="@taxRecord.ID">Details</a> |
                            <a class="text-color" asp-page="./Delete" asp-route-id="@taxRecord.ID">Delete</a>
                        </td>
                    </tr>
                }
            }
        </table>
        <div>
            @{
                List<string> taxNameList = new List<string> { "Gas", "Electricity", "Water", "Heating" };
            }
            @for(int i = 0; i < Model.TaxComparison.Count(); i++)
            {
                if(Model.TaxComparison[i] > 0)
                {
                    <p class="text-color" style="margin-top: 40px">@taxNameList[i] consumption this month compared to last month: <span class="text-negative")">+@Model.TaxComparison[i]%</span></p>
                }
                else
                {
                    <p class="text-color" style="margin-top: 40px">@taxNameList[i] consumption this month compared to last month: <span class="text-positive")">@Model.TaxComparison[i]%</span></p>
                }
                    
            }
        </div>
    }
    else
    {
        <body>
            <div>
                <p class="text-color" style="text-align:center">Please log in or sign up to see tax history</p>
            </div>
        </body>
    }
</div>

@section Scripts {
    @*<script src="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.2.1/"></script>*@
    @*for coloring positive, negative or neutral numbers*@
    <script>
        $(document).ready(function() {
            $('.toEvaluate').each(function() {
                var number = $(this).find($('.number'));
                var icon = $(this).find($('.icon'));
                var value = parseInt(number.html());
                if (value < 0) {
                    number.css('color', '#0ca73d');
                    icon.addClass('bi-arrow-down');
                    icon.css('color', '#0ca73d');
                } else if (value > 0) {
                    number.css('color', '#ff0000');
                    icon.addClass('bi-arrow-up');
                    icon.css('color', '#ff0000');
                } else {
                    number.css('color', 'gray');
                    icon.addClass('bi-arrow-down-up');
                    icon.css('color', 'gray');
                }
            });
        });
    </script>
}